#version 300 es

#ifdef GL_ES
precision highp float;
#endif

layout (location = 0) out vec4 rtFragColor;

//Light uniforms
uniform vec4 LightPosition;
uniform float LightIntensity;
uniform vec3 LightColor;

//Varying
in vec4 vColor;
in vec4 vPos;
in vec4 vNormal;
in vec4 vTexcoord;

void main()
{
	vec3 lVector = normalize(vec3(LightPosition - vColor));
	
	float attenuation = LightIntensity / ( dot((vColor.xyz-lVector),(vColor.xyz-lVector)) + 1.0);
	
	vec3 preColor = LightColor * vec3(0.5, 0.4, 0.9) * attenuation * max(dot(lVector, vPos.xyz), 0.0);
	rtFragColor = vec4(preColor, 1.0);

	//Per-vertex: input is final color
	//rtFragColor = vColor;
	
	//Per-fragmemt: calc color using inputs
	vec4 N = normalize(vNormal);
}