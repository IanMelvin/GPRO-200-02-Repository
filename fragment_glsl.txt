#version 300 es

#ifdef GL_ES
precision highp float;
#endif

layout (location = 0) out vec4 rtFragColor;

//Light Uniforms
uniform vec4 LightPosition;
uniform vec3 DiffuseReflectivity;
uniform vec3 LightIntensity;
uniform vec4 LightPosition2;
uniform vec3 LightIntensity2;
uniform vec3 DiffuseReflectivity2;
uniform vec4 LightPosition3;
uniform vec3 LightIntensity3;
uniform vec3 DiffuseReflectivity3;


//Varying
in vec4 vColor;
in vec4 vPos[3];
in vec4 vNormal;
in vec4 vTexcoord;

vec3 lightIng(vec4 light_view, vec3 lInt, vec3 DiffRef, vec3 norm_cam, vec4 eyeCoord)
{
	vec3 normDist = normalize(vec3(light_view - eyeCoord));
	return lInt * DiffRef * max(dot(normDist, norm_cam), 0.0);;
}

void main()
{
	//Per-fragment
	//vec3 preColor = vTexcoord.xyz * lightIng(vPos[0], LightIntensity, DiffuseReflectivity, vNormal.xyz, vColor);
	//preColor += lightIng(vPos[1], LightIntensity2, DiffuseReflectivity2, vNormal.xyz, vColor);
	//preColor += lightIng(vPos[2], LightIntensity3, DiffuseReflectivity3, vNormal.xyz, vColor);
	//rtFragColor = vec4(preColor, 1.0);

	//Per-vertex
	rtFragColor = vColor;
}