// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> Buffer C TAB (final)
// Modified by Ian Melvin
// Based off work done in GLSL 4.0 Cookbook (PG. 161)
// https://people.inf.elte.hu/plisaai/pdf/David%20Wolff%20-%20OpenGL%204.0%20Shading%20Language%20Cookbook%20(2).pdf

// GausBlur (Melvin): adds nearby pixels 
// fragCoord: pixel coord
// offset: how far the pixel is from the current pixel
// weight: a normalized value based on Pascal's triangle
vec4 GausBlur(sCoord fragCoord, vec2 offset, float weight)
{
    vec4 sum = texture(iChannel0, fragCoord + offset) * weight;
    sum += texture(iChannel0, fragCoord - offset) * weight;

    return sum;
}



//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    float norm = 1.0 / 16.0; //1.0 / 4.0; 
    
    vec4 sum = texture(iChannel0, uv) * 6.0; // * 2.0
    
    //fragColor += texture(iChannel0, uv);
    //3x3 Kernal
    //sum += GausBlur(fragCoord, height, vec2(0.0, 0.0), 2.0);
    //sum += GausBlur(fragCoord, height, vec2(0.0, 1.0), 1.0);
    
    //5x5 Kernal
    sum += GausBlur(fragCoord, vec2(0.0, 1.0), 4.0);
    sum += GausBlur(fragCoord, vec2(0.0, 2.0), 1.0);
    fragColor = sum * norm;
}
