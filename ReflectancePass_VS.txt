#version 330
//ReflectancePass
//Ian Melvin
//Based on work from labs 7 & 8

layout (location = 0) in vec4 aPosition;
layout (location = 1) in vec3 aNormal;

//Uniforms
uniform mat4 uModelMat, uViewMat, uViewProjMat;

//Varying
out vec4 vNormal;
out vec4 vTexcoord;
out vec4 vColor;
out vec4 vPos;

//Declaration of struct
struct light
{
	vec4 lightPosition;
	vec3 diffuseReflectivity;
	vec3 lightIntensity;
};

//Varying for struct
out light vLight;

//Calculates and declares variables needed to apply Phong
void main() {
	light lLight;
	lLight.lightPosition = vec4(1.0, .5, 0.2, 1.0);
	lLight.diffuseReflectivity = vec3(.2, .2, .9);
	lLight.lightIntensity = vec3(.7, .9, .6);
	
	mat4 modelView = uViewMat * uModelMat;
	vec4 lArr;
	vec4 eyeCoord;
	vec3 norm_cam;
	
	mat3 normMat = transpose(inverse(mat3(modelView)));
	norm_cam = normMat * aNormal;
	eyeCoord = modelView * aPosition;
	lArr = modelView * lLight.lightPosition;

	vColor = eyeCoord;
	vNormal = vec4(norm_cam, 1.0);
	vPos = lArr;
	vLight = lLight;
	
	vTexcoord = aPosition * 0.5 + 0.5;

   	gl_Position = uViewProjMat * uModelMat * aPosition;
}