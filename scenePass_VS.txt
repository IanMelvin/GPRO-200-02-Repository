#version 300 es
//Screen Pass
layout (location = 0) in vec4 aPosition;
layout (location = 1) in vec3 aNormal;

//Varying
out vec4 vStandardC;
out vec4 vNormal;
out vec4 vTexcoord;
out vec4 vColor;
out vec4 vPos;

//Uniforms
uniform mat4 uModelMat, uViewMat, uProjMat;
uniform vec4 LightPosition;
uniform vec3 DiffuseReflectivity;
uniform vec3 LightIntensity;

void main()
{
	mat4 modelViewMat = uViewMat * uModelMat;
	vec4 lArr;
	vec4 eyeCoord;
	vec3 norm_cam;
	
	//View Space
	mat3 normalMat = transpose(inverse(mat3(modelViewMat)));
	norm_cam = normalMat * aNormal;
	eyeCoord = modelViewMat * aPosition;	
	lArr = modelViewMat * LightPosition;

	gl_Position = uProjMat * uViewMat * uModelMat * aPosition;
	
	vStandardC = vec4(1.0, 0.5, 0.0, 1.0);
	vTexcoord = aPosition * 0.5 + 0.5;
	
	//Per-fragment
	vColor = eyeCoord;
	vNormal = vec4(norm_cam,1.0);
	vPos = lArr;
}